name: Linux Release

on:
  push:
    branches: ["release"]
  pull_request:
    branches: ["release"]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3

      - name: Update Node.js
        run: npm install

      - name: Create Dist Directory
        run: sudo mkdir dist

      - name: Install Tauri Deps
        run: |
          sudo apt-get update

          # Basic
          sudo apt-get install curl
          sudo apt-get install wget
          sudo apt-get install build-essential

          # Tauri
          sudo apt-get install libwebkit2gtk-4.0-dev
          sudo apt-get install libssl-dev
          sudo apt-get install libgtk-3-dev
          sudo apt-get install libayatana-appindicator3-dev
          sudo apt-get install librsvg2-dev

          # Additional
          sudo apt-get install libxcb-shape0-dev
          sudo apt-get install libxcb-xfixes0-dev
          sudo apt-get install libxcb1-dev
          sudo apt-get install libxkbcommon-dev
          sudo apt-get install libwebkit2gtk-4.0
          sudo apt-get install libudev-dev
          sudo apt-get install libsdl2-dev
          sudo apt-get install libasound2-dev
      
      - name: Install LibTorch
        run: |
          wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.13.1%2Bcpu.zip
          unzip libtorch-cxx11-abi-shared-with-deps-1.13.1+cpu.zip
      
      - name: Test
        run: cargo test --verbose --verbose
        working-directory: src-tauri
      
      - name: Build
        run: npx tauri build --verbose
      
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: mascoty-taurine-build
          path: src-tauri/target/release/bundle/deb/*.deb

      # - name: Create Release
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
